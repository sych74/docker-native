type: install
id: docker-swarm-ce
baseUrl: https://raw.githubusercontent.com/sych74/docker-native/master/docker-swarm
description:
  text: /text/description.md
  short: Docker Swarm Cluster with out-of-box auto-clustering and auto-scaling
categories:
  - apps/clusters
  - apps/dev-and-admin-tools
logo: ../images/docker-swarm-logo-89x70.png
name: Docker Swarm Cluster
targetRegions:
  type: vz7

globals:
  connect-node: ${baseUrl}/scripts/connect-swarm-node.js?_r=${fn.random}
  update-tokens: ${baseUrl}/scripts/update-swarm-tokens.js?_r=${fn.random}
  get-tokens: /scripts/get-swarm-tokens.js?_r=${fn.random}
  startPage: http://${env.domain}/
 
settings: 
  fields:  
  - type: nodetags      
    nodeType: dockerengine
    caption: Docker Version
    name: tag  
    width: 100
  - type: spinner
    name: mngr
    caption: Manager Nodes
    min: 1
    max: 10
    default: 1
  - type: spinner
    name: worker
    caption: Worker Nodes
    min: 1
    max: 10
    default: 1
    
  - name: stack
    type: radio-fieldset
    values:
      clean: Clean Cluster
      deploy: Deploy Stack YML
    default: clean
    showIf:
      deploy:
        - name: yml
          type: string
          caption: Stack YML URL
          default: https://github.com/jelastic/example-voting-app/blob/master/docker-stack.yml
          required: true
          vtype: url
        - name: stackName
          type: string
          caption: Stack Name
          default: example
          required: true
        - name: preHook
          type: string
          caption: Pre Hook
          inputType: hidden

      clean:
        name: portainer
        type: checkbox
        caption: Install <a href='https://portainer.io' target='_blank'>Portainer UI</a> - lightweight container management
        value: false
        
#  - name: autoscaling
#    type: checkbox    
#    caption: Enable Horizontal Auto-Scaling
#    value: false  

nodes:
  - count: ${settings.mngr}
    cloudlets: 32
    nodeType: dockerengine
    tag: ${settings.tag}
    nodeGroup: cp
    displayName: Manager
    env:
      JELASTIC_EXPOSE: false
    
  - count: ${settings.worker}
    nodeGroup: worker
    nodeType: dockerengine
    tag: ${settings.tag}
    displayName: Worker
    cloudlets: 32
    env:
      JELASTIC_EXPOSE: false

skipNodeEmails: true
 
onInstall:
  - addExtIp
  - init-swarm
  - build-cluster
  - if (${settings.autoscaling:false}): scaling-triggers
  - if ('${settings.stack}' == 'deploy'): deploy
  - portainer
  - get-tokens
  
onBeforeClone: stopEvent
#onAfterClone:
#  - install: 
#      jps: /addons/docker-swarm-restore.jps?_r=${fn.random}
#      envName: ${event.response.env.envName}      
#  - build-cluster: ${event.response.env.envName}

actions:
  init-swarm:
    install: /addons/docker-swarm-init.jps?_r=${fn.random}
    
  build-cluster:    
    install:
      jps: /addons/docker-swarm-scaling.jps?_r=${fn.random}
      envName: ${this:}
      settings:
        update-tokens: ${globals.update-tokens}
        connect-node: ${globals.connect-node}
        
  scaling-triggers:
    install:
      jps: ../addons/autoscaling-triggers.jps?_r=${fn.random}
      settings:
        mngr: ${settings.mngr}
        worker: ${settings.worker}
        
  deploy:
    - install:
        jps: ../addons/docker-deploy.jps?_r=${fn.random}
        settings:
          yml: ${settings.yml}
          stackName: ${settings.stackName}
          type: stackName
          preHook: ${settings.preHook}
 
    - if ('${settings.yml}'.indexOf('/openfaas/') > -1):
        setGlobals:
          startPage: http://${env.domain}:8080/

    - if ('${settings.yml}'.indexOf('/example-voting-app/') > -1):
        setGlobals:
          startPage: http://${env.domain}:5000/
        
  get-tokens:
    script: ${globals.get-tokens}
    next: succes-message
    
  succes-message:
    - setGlobals:
        manager_token: ${this.manager}
        worker_token: ${this.worker}
    - send-success
      
  send-success: 
    script: |
        return {type:'success', message:'/text/success.md', email:'/text/success.md'}

  portainer:
    if ('${settings.portainer}' == 'true'):
      - install:
          jps: ../addons/portainer.jps?_r=${fn.random}
          settings:
            mode: swarm
      - setGlobals:
          startPage: https://${env.domain}:4848/

  addExtIp:
    script: ../addons/scripts/attach-external-ip.js?_r=${fn.random}

startPage: ${globals.startPage}
