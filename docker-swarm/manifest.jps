type: install
version: 1.1
id: docker-swarm-ce
baseUrl: https://raw.githubusercontent.com/jelastic-jps/docker-native/master/addons
description:
  text: /text/description-swarm.md
  short: Docker Swarm Cluster with out-of-box auto-clustering and auto-scaling
categories:
  - apps/clusters
  - apps/dev-and-admin-tools
logo: ../images/docker-swarm-logo-89x70.png
name: Docker Swarm Cluster
targetRegions:
  type: vz7

globals:
  connect-node: ${baseUrl}/scripts/connect-swarm-node.js?_r=${fn.random}
  update-tokens: ${baseUrl}/scripts/update-swarm-tokens.js?_r=${fn.random}
  get-tokens: ${baseUrl}/scripts/get-swarm-tokens.js?_r=${fn.random}
  startPage: http://${env.domain}/

settings:
  fields:  
  - type: spinner
    name: mngr
    caption: Manager
    min: 1
    max: 10
    default: 1
  - type: spinner
    name: worker
    caption: Worker
    min: 1
    max: 10
    default: 1
    
  - name: stack
    type: radio-fieldset
    values:
      clean: Clean Cluster
      deploy: Deploy Stack YML
    default: clean
    showIf:
      deploy:
        - name: yml
          type: string
          caption: Stack YML URL
          default: https://github.com/jelastic/example-voting-app/blob/master/docker-stack.yml
          required: true
          vtype: url
        - name: stackName
          type: string
          caption: Stack Name
          default: example
          required: true
        - name: preHook
          type: string
          caption: Pre Hook
          inputType: hidden

      clean:
        name: portainer
        type: checkbox
        caption: Install <a href='https://portainer.io' target='_blank'>Portainer UI</a> - lightweight container management
        value: false
        
  - name: autoscaling
    type: checkbox
    caption: Enable Horizontal Auto-Scaling
    value: true    
        
nodes:
  - count: ${settings.mngr}
    cloudlets: 32
    image: jelastic/docker-ce
    nodeGroup: cp
    displayName: Manager
    env:
      JELASTIC_EXPOSE: false
  - count: ${settings.worker}
    nodeGroup: worker
    image: jelastic/docker-ce
    displayName: Worker
    cloudlets: 32
    env:
      JELASTIC_EXPOSE: false
 
skipNodeEmails: true
 
onInstall:
  - addExtIp
  - init-swarm
  - scaling-events
  - if (${settings.autoscaling}): scaling-triggers
  - if ('${settings.stack}' == 'deploy'): deploy
  - portainer
  - get-tokens
  
onBeforeClone: stopEvent
  
actions:
  init-swarm:
    install: ${baseUrl}/docker-swarm-init.jps?_r=${fn.random}
    
  scaling-events:
    install:
      jps: ${baseUrl}/docker-swarm-scaling.jps?_r=${fn.random}
      settings:
        baseUrl: ${baseUrl}
        connect-node: ${globals.connect-node}
        update-tokens: ${globals.update-tokens}
        get-tokens: ${globals.get-tokens}
        
  scaling-triggers:
    install:
      jps: ${baseUrl}/autoscaling-triggers.jps?_r=${fn.random}
      settings:
        mngr: ${settings.mngr}
        worker: ${settings.worker}
  deploy:
    - install:
        jps: ${baseUrl}/docker-deploy.jps?_r=${fn.random}
        settings:
          yml: ${settings.yml}
          stackName: ${settings.stackName}
          type: stackName
          preHook: ${settings.preHook}
 
    - if ('${settings.yml}'.indexOf('/openfaas/') > -1):
        setGlobals:
          startPage: http://${env.domain}:8080/

    - if ('${settings.yml}'.indexOf('/example-voting-app/') > -1):
        setGlobals:
          startPage: http://${env.domain}:5000/
        
  get-tokens:
    script: ${globals.get-tokens}
    next: no-ssh-keys
    
  no-ssh-keys:
    - send-success:
        manager_token: ${this.manager}
        worker_token: ${this.worker}
        name: swarm-success-no-ssh-keys.md
      
  send-success: 
    script: |
        import com.hivext.api.core.utils.Transport;
        var text = new Transport().get('${baseUrl}/text/${this.name}?_r=${fn.random}').replace('${globals.manager_token}', '${this.manager_token}').replace('${globals.worker_token}', '${this.worker_token}')
        return {type:'success', message:text, email:text}

  portainer:
    if ('${settings.portainer}' == 'true'):
      - install:
          jps: ${baseUrl}/portainer.jps?_r=${fn.random}
          settings:
            mode: swarm
      - setGlobals:
          startPage: https://${env.domain}:4848/

  addExtIp:
    script: ${baseUrl}/scripts/attach-external-ip.js?_r=${fn.random}

startPage: ${globals.startPage}

success:
  text: /text/swarm-success-no-ssh-keys.md
  email: /text/swarm-success-no-ssh-keys.md
